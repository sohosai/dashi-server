openapi: 3.1.0
info:
  title: dashi-server
  description: Thsi is a dashi-server API document.
  contact:
    name: Myxogastria0808
    url: https://yukiosada.work
    email: r.rstudio.c@gmail.com
  license:
    name: WTFPL
    url: http://www.wtfpl.net
  version: 0.0.1
servers:
- url: https://dashi-api.sohosai.com
paths:
  /:
    get:
      tags:
      - Ping
      operationId: ping_handler
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/color:
    get:
      tags:
      - Color
      operationId: all_colors_handler
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllColorsJson'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
    post:
      tags:
      - Color
      operationId: register_handler
      requestBody:
        description: RegisterColorData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterColorData'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/color/search:
    get:
      tags:
      - Color
      operationId: search_handler
      parameters:
      - name: keywords
        in: query
        description: set search word
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchColorJson'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/color/{id}:
    patch:
      tags:
      - Color
      operationId: update_handler
      parameters:
      - name: id
        in: path
        description: set color id (not name)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateColorData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/connector:
    get:
      tags:
      - Connector
      operationId: all_connectors_handler
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllConnectorsJson'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
    post:
      tags:
      - Connector
      operationId: register_handler
      requestBody:
        description: RegisterConnectorData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterConnectorData'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/connector/search:
    get:
      tags:
      - Connector
      operationId: search_handler
      parameters:
      - name: keywords
        in: query
        description: set search word
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConnectorJson'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/connector/{id}:
    patch:
      tags:
      - Connector
      operationId: status_handler
      parameters:
      - name: id
        in: path
        description: set connector id (not name)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusConnectorData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/csv/depreiation:
    get:
      tags:
      - Csv
      operationId: depreiation_handler
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepreiationCsvJson'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/csv/item:
    get:
      tags:
      - Csv
      operationId: item_handler
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCsvJson'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/generate:
    post:
      tags:
      - Generate
      operationId: generate_handler
      requestBody:
        description: GenerateDataRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateDataRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateData'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/healthcheck:
    get:
      tags:
      - Health Check
      operationId: healthcheck_handler
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/item/delete/{id}:
    delete:
      tags:
      - Item
      operationId: delete_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/item/image/{id}:
    put:
      tags:
      - Item
      operationId: image_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      requestBody:
        description: ImageItemMultipartData
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageItemMultipartData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/item/register:
    post:
      tags:
      - Item
      operationId: register_handler
      requestBody:
        description: RegisterItemMultipartData
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterItemMultipartData'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/item/search:
    get:
      tags:
      - Item
      operationId: search_handler
      parameters:
      - name: keywords
        in: query
        description: set search word
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchItemJson'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/item/transfer:
    patch:
      tags:
      - Item
      operationId: transfer_handler
      requestBody:
        description: TransferItemData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferItemData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/item/trash:
    get:
      tags:
      - Item
      operationId: trash_handler
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrashItemDataJson'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/item/update/{id}:
    patch:
      tags:
      - Item
      operationId: update_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      requestBody:
        description: UpdateItemDataJson
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemDataJson'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/item/{id}:
    get:
      tags:
      - Item
      operationId: individual_item_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualItemDataJson'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/joke/teapot:
    get:
      tags:
      - Joke
      operationId: teapot_handler
      responses:
        '418':
          description: I'm A Teapot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/joke/unavailable:
    get:
      tags:
      - Joke
      operationId: unavailable_handler
      responses:
        '451':
          description: Unavailable For Legal Reasons
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/rental/all:
    get:
      tags:
      - Rental
      operationId: all_rental_items_handler
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentalItemJson'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/rental/rent/{id}:
    patch:
      tags:
      - Rental
      operationId: rent_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      requestBody:
        description: RentalData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentalData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/rental/replace/{id}:
    patch:
      tags:
      - Rental
      operationId: replace_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
  /api/rental/update/{id}:
    patch:
      tags:
      - Rental
      operationId: update_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      requestBody:
        description: RentalData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentalData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      security:
      - jwt_token: []
components:
  securitySchemes:
    jwt_token:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: Item
  description: 物品に関係するエンドポイント
- name: Csv
  description: csv出力に関するエンドポイント
- name: Rental
  description: レンタルに関係するエンドポイント
- name: Generate
  description: QRまたはBarcodeを生成するエンドポイント
- name: Connector
  description: 接続端子に関係するエンドポイント
- name: Color
  description: ケーブルに貼るテープに関係するエンドポイント
- name: Health Check
  description: Health Checkのエンドポイント
- name: Ping
  description: pingを送るエンドポイント
- name: Joke
  description: 特殊なステータスコードを返すエンドポイント

