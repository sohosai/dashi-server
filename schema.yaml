openapi: 3.0.3
info:
  title: dashi-server
  description: Thsi is a dashi-server API document.
  contact:
    name: Myxogastria0808
    url: https://yukiosada.work
    email: r.rstudio.c@gmail.com
  license:
    name: WTFPL
    url: http://www.wtfpl.net
  version: 0.0.1
servers:
- url: https://dashi-api.sohosai.com
paths:
  /:
    get:
      tags:
      - Ping
      operationId: ping_handler
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/color:
    get:
      tags:
      - Color
      operationId: all_colors_handler
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllColorsJson'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
      - Color
      operationId: register_handler
      requestBody:
        description: RegisterColorData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterColorData'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/color/search:
    get:
      tags:
      - Color
      operationId: search_handler
      parameters:
      - name: keywords
        in: query
        description: set search word
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchColorJson'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/color/{id}:
    patch:
      tags:
      - Color
      operationId: update_handler
      parameters:
      - name: id
        in: path
        description: set color id (not name)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateColorData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/connector:
    get:
      tags:
      - Connector
      operationId: all_connectors_handler
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllConnectorsJson'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
      - Connector
      operationId: register_handler
      requestBody:
        description: RegisterConnectorData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterConnectorData'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/connector/search:
    get:
      tags:
      - Connector
      operationId: search_handler
      parameters:
      - name: keywords
        in: query
        description: set search word
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConnectorJson'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/connector/{id}:
    patch:
      tags:
      - Connector
      operationId: status_handler
      parameters:
      - name: id
        in: path
        description: set connector id (not name)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusConnectorData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/csv/depreiation:
    get:
      tags:
      - Csv
      operationId: depreiation_handler
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepreiationCsvJson'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/csv/item:
    get:
      tags:
      - Csv
      operationId: item_handler
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCsvJson'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/generate:
    post:
      tags:
      - Generate
      operationId: generate_handler
      requestBody:
        description: GenerateDataRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateDataRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateData'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/healthcheck:
    get:
      tags:
      - Health Check
      operationId: healthcheck_handler
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/item/delete/{id}:
    delete:
      tags:
      - Item
      operationId: delete_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/item/image/{id}:
    put:
      tags:
      - Item
      operationId: image_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      requestBody:
        description: ImageItemMultipartData
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageItemMultipartData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/item/register:
    post:
      tags:
      - Item
      operationId: register_handler
      requestBody:
        description: RegisterItemMultipartData
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterItemMultipartData'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/item/search:
    get:
      tags:
      - Item
      operationId: search_handler
      parameters:
      - name: keywords
        in: query
        description: set search word
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchItemJson'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/item/transfer:
    patch:
      tags:
      - Item
      operationId: transfer_handler
      requestBody:
        description: TransferItemData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferItemData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/item/trash:
    get:
      tags:
      - Item
      operationId: trash_handler
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrashItemDataJson'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/item/update/{id}:
    patch:
      tags:
      - Item
      operationId: update_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      requestBody:
        description: UpdateItemDataJson
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemDataJson'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/item/{id}:
    get:
      tags:
      - Item
      operationId: individual_item_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualItemDataJson'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/joke/teapot:
    get:
      tags:
      - Joke
      operationId: teapot_handler
      responses:
        '418':
          description: I'm A Teapot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/joke/unavailable:
    get:
      tags:
      - Joke
      operationId: unavailable_handler
      responses:
        '451':
          description: Unavailable For Legal Reasons
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/rental/all:
    get:
      tags:
      - Rental
      operationId: all_rental_items_handler
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentalItemJson'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/rental/rent/{id}:
    patch:
      tags:
      - Rental
      operationId: rent_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      requestBody:
        description: RentalData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentalData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/rental/replace/{id}:
    patch:
      tags:
      - Rental
      operationId: replace_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /api/rental/update/{id}:
    patch:
      tags:
      - Rental
      operationId: update_handler
      parameters:
      - name: id
        in: path
        description: set item id (not visible id)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      requestBody:
        description: RentalData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentalData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
components:
  schemas:
    AllColorsJson:
      type: object
      required:
      - all_colors
      properties:
        all_colors:
          type: array
          items:
            $ref: '#/components/schemas/ColorData'
    AllConnectorsJson:
      type: object
      required:
      - all_connectors
      properties:
        all_connectors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorData'
    ColorData:
      type: object
      required:
      - id
      - name
      - hex_color_code
      - status
      properties:
        hex_color_code:
          type: string
        id:
          type: integer
          format: int32
        name:
          type: string
        status:
          $ref: '#/components/schemas/Status'
    ConnectorData:
      type: object
      required:
      - id
      - name
      - status
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        status:
          $ref: '#/components/schemas/Status'
    DepreiationCsvData:
      type: object
      required:
      - name
      - product_number
      properties:
        durability:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
        product_number:
          type: string
        purchase_price:
          type: integer
          format: int32
          nullable: true
        purchase_year:
          type: integer
          format: int32
          nullable: true
    DepreiationCsvJson:
      type: object
      required:
      - depreciation_items
      properties:
        depreciation_items:
          type: array
          items:
            $ref: '#/components/schemas/DepreiationCsvData'
    GenerateData:
      type: object
      required:
      - visible_ids
      properties:
        visible_ids:
          type: array
          items:
            type: string
    GenerateDataRequest:
      type: object
      required:
      - quantity
      - record
      properties:
        quantity:
          type: integer
          format: int32
          minimum: 0
        record:
          type: string
    ImageItemMultipartData:
      type: object
      required:
      - image
      properties:
        image:
          type: string
          format: binary
    IndividualItemDataJson:
      type: object
      required:
      - id
      - visible_id
      - parent_id
      - parent_visible_id
      - record
      - name
      - product_number
      - description
      - is_depreciation
      - connector
      - is_rent
      - color
      - created_at
      - updated_at
      - recipient
      - rental_description
      properties:
        color:
          type: string
        connector: {}
        created_at:
          type: string
        description:
          type: string
        durability:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
        is_depreciation:
          type: boolean
        is_rent:
          type: boolean
        latest_rent_at:
          type: string
          nullable: true
        latest_replace_at:
          type: string
          nullable: true
        name:
          type: string
        parent_id:
          type: integer
          format: int32
        parent_visible_id:
          type: string
        product_number:
          type: string
        purchase_price:
          type: integer
          format: int32
          nullable: true
        purchase_year:
          type: integer
          format: int32
          nullable: true
        recipient:
          type: string
        record:
          $ref: '#/components/schemas/Record'
        rental_description:
          type: string
        scheduled_replace_at:
          type: string
          nullable: true
        updated_at:
          type: string
        visible_id:
          type: string
    ItemCsvData:
      type: object
      required:
      - name
      - product_number
      - description
      properties:
        description:
          type: string
        name:
          type: string
        product_number:
          type: string
    ItemCsvJson:
      type: object
      required:
      - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemCsvData'
    Record:
      type: string
      enum:
      - Qr
      - Barcode
      - Nothing
    RegisterColorData:
      type: object
      required:
      - name
      - hex_color_code
      properties:
        hex_color_code:
          type: string
        name:
          type: string
    RegisterConnectorData:
      type: object
      required:
      - name
      properties:
        name:
          type: string
    RegisterItemMultipartData:
      type: object
      required:
      - parent_visible_id
      - visible_id
      - name
      - product_number
      - description
      - is_depreciation
      - connector
      - color
      - image
      properties:
        color:
          type: string
        connector:
          type: string
        description:
          type: string
        durability:
          type: string
          nullable: true
        image:
          type: string
          format: binary
        is_depreciation:
          type: string
        name:
          type: string
        parent_visible_id:
          type: string
        product_number:
          type: string
        purchase_price:
          type: string
          nullable: true
        purchase_year:
          type: string
          nullable: true
        visible_id:
          type: string
    RentalData:
      type: object
      required:
      - id
      - recipient
      - rental_description
      - scheduled_replace_at
      properties:
        id:
          type: integer
          format: int32
        recipient:
          type: string
        rental_description:
          type: string
        scheduled_replace_at:
          type: string
    RentalItemData:
      type: object
      required:
      - id
      - visible_id
      - record
      - name
      - product_number
      - description
      - is_depreciation
      - connector
      - is_rent
      - color
      - created_at
      - updated_at
      - recipient
      - rental_description
      properties:
        color:
          type: string
        connector:
          type: array
          items:
            type: string
        created_at:
          type: string
        description:
          type: string
        durability:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
        is_depreciation:
          type: boolean
        is_rent:
          type: boolean
        latest_rent_at:
          type: string
          nullable: true
        latest_replace_at:
          type: string
          nullable: true
        name:
          type: string
        product_number:
          type: string
        purchase_price:
          type: integer
          format: int32
          nullable: true
        purchase_year:
          type: integer
          format: int32
          nullable: true
        recipient:
          type: string
        record:
          $ref: '#/components/schemas/Record'
        rental_description:
          type: string
        scheduled_replace_at:
          type: string
          nullable: true
        updated_at:
          type: string
        visible_id:
          type: string
    RentalItemJson:
      type: object
      required:
      - rental_items
      properties:
        rental_items:
          type: array
          items:
            $ref: '#/components/schemas/RentalItemData'
    ResponseError:
      type: object
      required:
      - code
      - message
      properties:
        code:
          type: string
        message:
          type: string
    SearchColorJson:
      type: object
      required:
      - search_colors
      properties:
        search_colors:
          type: array
          items:
            $ref: '#/components/schemas/ColorData'
    SearchConnectorJson:
      type: object
      required:
      - search_connectors
      properties:
        search_connectors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorData'
    SearchItemData:
      type: object
      required:
      - id
      - visible_id
      - record
      - name
      - product_number
      - description
      - is_depreciation
      - connector
      - is_rent
      - color
      - created_at
      - updated_at
      - recipient
      - rental_description
      properties:
        color:
          type: string
        connector:
          type: array
          items:
            type: string
        created_at:
          type: string
        description:
          type: string
        durability:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
        is_depreciation:
          type: boolean
        is_rent:
          type: boolean
        latest_rent_at:
          type: string
          nullable: true
        latest_replace_at:
          type: string
          nullable: true
        name:
          type: string
        product_number:
          type: string
        purchase_price:
          type: integer
          format: int32
          nullable: true
        purchase_year:
          type: integer
          format: int32
          nullable: true
        recipient:
          type: string
        record:
          $ref: '#/components/schemas/Record'
        rental_description:
          type: string
        scheduled_replace_at:
          type: string
          nullable: true
        updated_at:
          type: string
        visible_id:
          type: string
    SearchItemJson:
      type: object
      required:
      - search_items
      properties:
        search_items:
          type: array
          items:
            $ref: '#/components/schemas/SearchItemData'
    Status:
      type: string
      enum:
      - Active
      - Archive
    StatusConnectorData:
      type: object
      required:
      - id
      - status
      properties:
        id:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/Status'
    TransferItemData:
      type: object
      required:
      - id
      - new_parent_id
      properties:
        id:
          type: integer
          format: int32
        new_parent_id:
          type: integer
          format: int32
    TrashItemData:
      type: object
      required:
      - id
      - item_id
      - visible_id
      - name
      - product_number
      - description
      - is_depreciation
      - connector
      - is_rent
      - color
      - created_at
      - updated_at
      properties:
        color:
          type: string
        connector:
          type: array
          items:
            type: string
        created_at:
          type: string
        description:
          type: string
        durability:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
        is_depreciation:
          type: boolean
        is_rent:
          type: boolean
        item_id:
          type: integer
          format: int32
        name:
          type: string
        product_number:
          type: string
        purchase_price:
          type: integer
          format: int32
          nullable: true
        purchase_year:
          type: integer
          format: int32
          nullable: true
        updated_at:
          type: string
        visible_id:
          type: string
    TrashItemDataJson:
      type: object
      required:
      - trash_items
      properties:
        trash_items:
          type: array
          items:
            $ref: '#/components/schemas/TrashItemData'
    UpdateColorData:
      type: object
      required:
      - id
      - hex_color_code
      - status
      properties:
        hex_color_code:
          type: string
        id:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/Status'
    UpdateItemDataJson:
      type: object
      required:
      - visible_id
      - name
      - product_number
      - description
      - is_depreciation
      - connector
      - color
      properties:
        color:
          type: string
        connector:
          type: array
          items:
            type: string
        description:
          type: string
        durability:
          type: integer
          format: int32
          nullable: true
        is_depreciation:
          type: boolean
        name:
          type: string
        product_number:
          type: string
        purchase_price:
          type: integer
          format: int32
          nullable: true
        purchase_year:
          type: integer
          format: int32
          nullable: true
        visible_id:
          type: string
tags:
- name: Item
  description: 物品に関係するエンドポイント
- name: Csv
  description: csv出力に関するエンドポイント
- name: Rental
  description: レンタルに関係するエンドポイント
- name: Generate
  description: QRまたはBarcodeを生成するエンドポイント
- name: Connector
  description: 接続端子に関係するエンドポイント
- name: Color
  description: ケーブルに貼るテープに関係するエンドポイント
- name: Health Check
  description: Health Checkのエンドポイント
- name: Ping
  description: pingを送るエンドポイント
- name: Joke
  description: 特殊なステータスコードを返すエンドポイント

